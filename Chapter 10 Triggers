# 10.1 Triggers
/*
Trigger: 
A block of SQL code that automatically gets executed BEFORE or AFTER an INSERT, UPDATE or DELETE statement. 
*/
DELIMITER $$

CREATE TRIGGER payments_after_insert
	AFTER INSERT ON payments
    FOR EACH ROW-- 同理可以写BEFORE，以及UDDATE或者DELETE
BEGIN 
	UPDATE invoices
    SET payment_total = payment_total + NEW.amount
    WHERE invoice_id = NEW.invoice_id; 
END $$

DELIMITER ;

/*
有这个触发器的存在，就可以在INSERT新数据进payments的同时
将对应的数据更新到invoices表里面，具体代码如下：
INSERT INTO payments
VALUES (DEFAULT, 5, 3, '2019-01-01', 10, 1)
*/

# 练习10.1
-- Create a trigger that gets fired when we delete a payment. 	
DELIMITER $$

CREATE TRIGGER payments_after_delete
	AFTER DELETE ON payments
	FOR EACH ROW

BEGIN 
	UPDATE invoices
    SET payment_total = payment_total - OLD.amount
    WHERE invoice_id = OLD.invoice_id; 
END $$

DELIMITER ; 

/*
触发：
DELETE 
FROM payments 
WHERE payment_id = 9 -- or last_insert_id()
*/

# 10.2 Viewing Triggers
-- Method 1: 
SHOW TRIGGERS LIKE 'payments%' 
-- Method 2: 
/*
直接在SCHEMAS对应的数据库以及对应的表查看Triggers的名字
最好可以将Triggers保留在本地以便未来使用
*/

# 10.3 Dropping Triggers
DROP TRIGGER IF EXISTS payments_after_insert
-- 最好的写TRIGGER的方法和之前写VIEW一样，将这一句放在一切TRIGGER代码的开头。

# 10.4 Sing Triggers for Auditing
/*
这一课讲的就是如何设计一个审计表，记录每一笔数据改变的发生
在每一个触发器里面，添加几行代码来跟随每一次触发器的点火，将一条记录插入一个新表里
这个新表就会变成所谓的审计表
代码：
INSERT INTO payments_audit
VALUES(OLD.client_id, OLD.date, OLD.amount, 'DELETE', NOW()); 
*/
-- INSERT INTO payments
-- VALUE(DEFAULT, 5, 3, '2019-01-01', 10, 1)
-- DELETE FROM payments
-- WHERE payment_id = 10

# 10.5 Events
/*
Event: 
is a task (or a block of SQL code) that gets executed according to a schedule
通过事件，我们可以定期维护数据库，例如：
删除过期数据，将表格复制到另外一张表格等等
*/
SHOW VARIABLES LIKE 'Event%'; 
-- 正则表达式：WHERE Variable_name REGEXP '^Event'
-- 找到event_scheduler, 并确保是ON，如果不是则用SET GLOBAL event_scheduler = ON
-- 本节课事件例子：
DELIMITER $$

CREATE EVENT yearly_delete_stale_audit_rows
ON SCHEDULE
		-- AT '2023-12-25' -- 在特定的某一天/时间点执行
	EVERY 1 YEAR STARTS '2019-01-01'ENDS '2029-01-01'
DO BEGIN 
	DELETE FROM payments_audit
    WHERE action_date < NOW() - INTERVAL 1 YEAR; 
END $$

DELIMITER ;

# 10.6 Viewing and Dropping Events
SHOW EVENTS; -- shows all events within the selected database
DROP EVENT IF EXISTS yearly_delete_stale_audit_rows; 
ALTER EVENT yearly_delete_stale_audit_rows;  -- 语法和CREATE EVENT一模一样，
-- 又或者在屁股加上DISABLE/ENABLE来快速禁用/启用，比如：
-- ALTER EVENT yearly_delete_stale_audit_rows DISABLE
