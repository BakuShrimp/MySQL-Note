# 10.1 Triggers
/*
Trigger: 
A block of SQL code that automatically gets executed BEFORE or AFTER an INSERT, UPDATE or DELETE statement. 
*/
DELIMITER $$

CREATE TRIGGER payments_after_insert
	AFTER INSERT ON payments
    FOR EACH ROW-- 同理可以写BEFORE，以及UDDATE或者DELETE
BEGIN 
	UPDATE invoices
    SET payment_total = payment_total + NEW.amount
    WHERE invoice_id = NEW.invoice_id; 
END $$

DELIMITER ;

/*
有这个触发器的存在，就可以在INSERT新数据进payments的同时
将对应的数据更新到invoices表里面，具体代码如下：
INSERT INTO payments
VALUES (DEFAULT, 5, 3, '2019-01-01', 10, 1)
*/

# 练习10.1
-- Create a trigger that gets fired when we delete a payment. 	
DELIMITER $$

CREATE TRIGGER payments_after_delete
	AFTER DELETE ON payments
	FOR EACH ROW

BEGIN 
	UPDATE invoices
    SET payment_total = payment_total - OLD.amount
    WHERE invoice_id = OLD.invoice_id; 
END $$

DELIMITER ; 

/*
触发：
DELETE 
FROM payments 
WHERE payment_id = 9 -- or last_insert_id()
*/

# 10.2 Viewing Triggers
-- Method 1: 
SHOW TRIGGERS LIKE 'payments%' 
-- Method 2: 
/*
直接在SCHEMAS对应的数据库以及对应的表查看Triggerspayment_methodspayment_methods
*/

# 10.3 Dropping Triggers
DROP TRIGGER IF EXISTS payments_after_insert
-- 最好的写TRIGGER的方法和之前写VIEW一样，将这一句放在一切TRIGGER代码的开头。

